#
# Candybean is a next generation automation and testing framework suite.
# It is a collection of components that foster test automation, execution
# configuration, data abstraction, results illustration, tag-based execution,
# top-down and bottom-up batches, mobile variants, test translation across
# languages, plain-language testing, and web service testing.
# Copyright (C) 2013 SugarCRM, Inc. <candybean@sugarcrm.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#automation.framework = selenium
automation.interface = chrome

debug = true

browser.firefox_binary = {"linux": "/usr/bin/firefox", \
			    "mac": "/Applications/Firefox 19.0.2.app/Contents/MacOS/firefox", \
			"windows": "C:/Program Files (x86)/Mozilla Firefox/firefox.exe"}

browser.firefox_profile = default

browser.chrome_driver_path = {"linux": "./lib/chromedriver-linux64", \
				"mac": "./lib/chromedriver-mac", \
			    "windows": "./lib/chromedriver-win.exe"}

browser.chrome_driver_log_path = ./log/chromedriver.log

perf.page_load_timeout = 2
perf.implicit_wait_seconds = 20

# Logging
system.log_path = ./log/voodoo.log
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# File logging
java.util.logging.FileHandler.pattern = ./log/voodoo.log
java.util.logging.FileHandler.limit = 50000
#java.util.logging.FileHandler.limit = 1
java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = INFO

# Console logging
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Logging format
java.util.logging.SimpleFormatter.format = [%1$tm-%1$td-%1$tY %1$tk:%1$tM:%1$tS:%1$tL] %2$s%n%4$s: %5$s%6$s%n
