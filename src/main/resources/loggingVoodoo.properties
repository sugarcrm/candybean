############################################################
# This file is copied from jre/logging.properties.
# A few changes were made to suit Voodoo.
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.pattern = log/root.log
java.util.logging.FileHandler.limit = 50000
#java.util.logging.FileHandler.limit = 1
java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Example to customize the SimpleFormatter output format 
# to print one-line log message like this:
#     <level>: <log message> [<date/time>]
#
# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
# $tk = 24 hr clock
# $tL = millisec
java.util.logging.SimpleFormatter.format=[%1$tm-%1$td-%1$tY %1$tk:%1$tM:%1$tS:%1$tL] %2$s%n%4$s: %5$s%6$s%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# Set logger level, example: 
com.sugarcrm.voodoo.autofw.SeleniumAutoFW.level = INFO 

# Note that there is no default support to allow specifying log files 
# for specific loggers in this config. 
# Only the log file for the root can be specified. It is the line: 
# java.util.logging.FileHandler.pattern = log/voodoo.log
# 
# If necessary, we would put the log file paths in some other properties 
# file(s), and the paths are to be read in.

