#
# Candybean is a next generation automation and testing framework suite.
# It is a collection of components that foster test automation, execution
# configuration, data abstraction, results illustration, tag-based execution,
# top-down and bottom-up batches, mobile variants, test translation across
# languages, plain-language testing, and web service testing.
# Copyright (C) 2013 SugarCRM, Inc. <candybean@sugarcrm.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#automation.framework = webdriver
automation.interface = chrome

browser.firefox.binary = {\
	"linux": "/usr/bin/firefox", \
	"mac": "/Applications/Firefox 19.0.2.app/Contents/MacOS/firefox", \
	"windows": "C:/Program Files (x86)/Mozilla Firefox/firefox.exe"}
browser.firefox.profile = default

browser.chrome.driver.path = {\
	"linux": "./lib/chromedriver-linux64", \
	"mac": "./lib/chromedriver-mac32", \
	"windows": "./lib/chromedriver-win32.exe"}
browser.chrome.driver.log.path = ./log/chromedriver.log

browser.ie.driver.path = ./lib/IEDriverServer-64.exe
        
perf.page.load.timeout = 2
perf.implicit.wait.seconds = 20

# Logging
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# File logging
java.util.logging.FileHandler.pattern = ./log/candybean.%g.log
java.util.logging.FileHandler.limit = 50000
#java.util.logging.FileHandler.limit = 1
java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = INFO

# Console logging
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Logging format
#java.util.logging.SimpleFormatter.format = [%1$tm-%1$td-%1$tY %1$tk:%1$tM:%1$tS:%1$tL] %2$s%n%4$s: %5$s%6$s%n
java.util.logging.SimpleFormatter.format = [%1$tH:%1$tM:%1$tS:%1$tL] %4$s: %2$s %5$s%6$s%n

# Monte Media Library Recorder Settings
video.format=video/quicktime
video.format.frameRate=15
video.directory=./target/candybean-reports/recordings
video.encoding=rle 
video.compression=Animation
maxFileSize=512000
testResultsXMLPath=./target/candybean-reports/results/failedTestResults.xml
testResultsHtmlPath=./target/candybean-reports/reports/FailedRecordingReport.html

maxRecordingTime=120000

# Candybean Test Results Report Settings
testResultsReportPath=./target/candybean-reports/reports/CandybeanTestResults.html
testResultsReport.title=Candybean Test Results Report
testResultsReport.testsPerPage=8
surefireResultsDirectory=./target/surefire-reports

# Candybean appium automated startup settings
appium.path=/usr/local/bin/appium
appium.ip=127.0.0.1
appium.port=4723
avd.emulator.name=test-emulator
avd.emulator.path=/usr/local/adt/sdk/emulator
#Desired capabilities for GeneralizedAndroidTest
GeneralizedAndroidTest.app=lib/TestApp.apk
GeneralizedAndroidTest.app-package=com.example.TestApp
GeneralizedAndroidTest.app-activity=MyActivity

#Desired capabilities for EvernoteAndroidTest
EvernoteAndroidTest.app=lib/evernote.apk
EvernoteAndroidTest.app-package=com.evernote
EvernoteAndroidTest.app-activity=.ui.HomeActivity

#Desired capabilities for SugarIosTest
SugarIosTest.app=https://s3.amazonaws.com/voodoo2/sugarcrm.app.zip